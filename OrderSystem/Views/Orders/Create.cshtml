@model ModelsPackage.OrderVM
@using ModelsPackage
@inject OrderSystem.Data.ApplicationDbContext _context
@using OrderSystem.Helpers.VMMappers

@{
    ViewData["Title"] = "Create New Order";
}

<h4>Create New Order</h4>
<hr />
<div class="row">
    <div>
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="CustomerId" class="control-label"></label>
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" class="form-control" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-5 ">
                @{
                    if (Model.OrderLines.Count() == 0)
                    {
                        Model.OrderLines = ItemMapper.MappToOrderLineVMLis(_context.Items.ToList());
                    }

                    if (Model.OrderLines.Count() > 0)
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    
                                    <th>
                                        @Html.DisplayNameFor(model => model.OrderLines[0].ItemBrand)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.OrderLines[0].ItemModel)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.OrderLines[0].ItemColor)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.OrderLines[0].Price)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.OrderLines[0].Quantity)
                                    </th>

                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>

                                @for (int i = 0; i < Model.OrderLines.Count(); i++)
                                {
                                <tr>
                                   
                                    <td>
                                        @Html.TextBoxFor(model => model.OrderLines[i].ItemBrand, new { @readonly = true })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OrderLines[i].ItemModel, new { @readonly = true })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OrderLines[i].ItemColor, new { @readonly = true })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OrderLines[i].Price, new { @readonly = true })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OrderLines[i].Quantity, new { @type = "number", @min = "0" })
                                    </td>

                                </tr>
                                }

                            </tbody>
                        </table>
                    }

                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
